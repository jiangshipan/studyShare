package com.jsp.studyShare.Service;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.InitializingBean;import org.springframework.stereotype.Service;import redis.clients.jedis.Jedis;import redis.clients.jedis.JedisPool;@Servicepublic class JedisAdapter implements InitializingBean {    private static final Logger logger = LoggerFactory.getLogger(JedisAdapter.class);    private Jedis jedis = null;    private JedisPool jedisPool = null;    @Override    public void afterPropertiesSet() throws Exception {        //初始化        jedisPool = new JedisPool("localhost", 6379);    }    //获取一个jedis    private Jedis getJedis() {        try {            jedis = jedisPool.getResource();        } catch (Exception e) {            logger.error("获取jedis失败" , e);        } finally {            if (jedis != null) {                jedis.close();            }        }        return jedis;    }    /**     * 获取Redis中集合的某个key值     * @param key     * @return     */    public String get(String key) {        Jedis jedis = null;        try {            jedis = jedisPool.getResource();            return jedis.get(key);        } catch (Exception e) {            logger.error("Jedis get发生异常" , e);            return null;        } finally {            if (jedis != null) {                jedis.close();            }        }    }    /**     * 给Redis中Set集合中某个key设置值     * @param key     * @param value     */    public void set(String key, String value) {        Jedis jedis = null;        try {            jedis = jedisPool.getResource();            jedis.set(key, value);        } catch (Exception e) {            logger.error("Jedis set发生异常" , e);        } finally {            if (jedis != null) {                jedis.close();            }        }    }    /**     * 向Redis的set集合添加值：点赞     * @param key     * @param value     * @return     */    public long sadd(String key, String value) {        Jedis jedis = null;        try {            jedis = jedisPool.getResource();            return jedis.sadd(key, value);        } catch (Exception e) {            logger.error("Jedis sadd发生异常" , e);            return 0;        } finally {            if (jedis != null) {                jedis.close();            }        }    }    /**     * 移除：取消点赞     * @param key     * @param value     * @return     */    public long srem(String key, String value) {        Jedis jedis = null;        try {            jedis = jedisPool.getResource();            return jedis.srem(key, value);        } catch (Exception e) {            logger.error("Jedis srem发生异常" , e);            return 0;        } finally {            if (jedis != null) {                jedis.close();            }        }    }    /**     * 判断key,value是否是集合中值     * @param key     * @param value     * @return     */    public boolean sismember(String key, String value) {        Jedis jedis = null;        try {            jedis = jedisPool.getResource();            return jedis.sismember(key,value);        } catch (Exception e) {            logger.error("Jedis sismember发生异常" , e);            return false;        } finally {            if (jedis != null) {                jedis.close();            }        }    }    /**     * 获取集合大小     * @param key     * @return     */    public long scard(String key) {        Jedis jedis = null;        try {            jedis = jedisPool.getResource();            return jedis.scard(key);        } catch (Exception e) {            logger.error("Jedis scard发生异常" , e);            return 0;        } finally {            if (jedis != null) {                jedis.close();            }        }    }}