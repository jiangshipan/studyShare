package com.jsp.studyShare.Service;import com.jsp.studyShare.Dao.TopicDao;import com.jsp.studyShare.Dao.UserDao;import com.jsp.studyShare.model.*;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import org.springframework.util.StringUtils;import java.util.*;@Servicepublic class TopicService {    @Autowired    private HostHolder hostHolder;    @Autowired    private TopicDao topicDAO;    @Autowired    private UserDao userDAO;    @Autowired    private CommentService commentService;    public Map<String, String> addTopic(String subject, String contents) {        Map<String, String> map = new HashMap<>();        if (StringUtils.isEmpty(subject)) {            map.put("msg", "主题不能为空");            return map;        }        Topic topic = new Topic();        topic.setOpenid(hostHolder.getUser().getOpenid());        topic.setSubject(subject);        topic.setContents(contents);        topic.setLikeCount(0);        topic.setDislikeCount(0);        topic.setCommentCount(0);        //默认开启        topic.setStatus(1);        topic.setSentTime(new Date());        topicDAO.addTopic(topic);        map.put("msg", "新增成功");        return map;    }    public List<ResponseTopic> getTopics() {        List<Topic> topics = topicDAO.getTopics();        List<ResponseTopic> respTopics = new ArrayList<>();        for (Topic topic : topics) {            ResponseTopic respTopic = new ResponseTopic();            respTopic.setTid(topic.getTid());            respTopic.setSubject(topic.getSubject());            respTopic.setContents(topic.getContents());            respTopic.setSentTime(topic.getSendTime());            User user = userDAO.getUserById(topic.getOpenid());            respTopic.setNickname(user.getNickname());            respTopic.setLikeCount(topic.getLikeCount());            respTopic.setDislikeCount(topic.getDislikeCount());            respTopic.setCommentCount(topic.getCommentCount());            respTopics.add(respTopic);        }        return respTopics;    }    public ResponseDetail getDetail(int tid) {        ResponseDetail respDetail = new ResponseDetail();        //获取respTopic        Topic topic = topicDAO.getTopicById(tid);        ResponseTopic respTopic = new ResponseTopic();        respTopic.setTid(tid);        respTopic.setSubject(topic.getSubject());        respTopic.setContents(topic.getContents());        //获取nickname        User user = userDAO.getUserById(topic.getOpenid());        respTopic.setNickname(user.getNickname());        respTopic.setLikeCount(topic.getLikeCount());        respTopic.setDislikeCount(topic.getDislikeCount());        respTopic.setCommentCount(topic.getCommentCount());        respTopic.setSentTime(topic.getSendTime());        //获取respComments        List<ResponseComment> respComments = commentService.getComments(tid);        //添加到respDetail        respDetail.setRespTopic(respTopic);        respDetail.setRespComment(respComments);        return respDetail;    }    public void deleTopic(int tid) {        topicDAO.updateStatus(tid, 0);    }    public void addCommentCount(int tid) {        topicDAO.addCommentCount(tid);    }    /**     * 更新点赞数     * @param tid     * @param likeCount     * @param disLikeCount     */    public void updateLikeCount(int tid, int likeCount, int disLikeCount) {        topicDAO.updateLikeCount(tid, likeCount, disLikeCount);    }}