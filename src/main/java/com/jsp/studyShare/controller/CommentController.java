package com.jsp.studyShare.controller;import com.jsp.studyShare.Service.CommentService;import com.jsp.studyShare.model.Response;import com.jsp.studyShare.utils.JsonUtil;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.util.StringUtils;import org.springframework.web.bind.annotation.*;import java.util.Map;@RequestMapping("/comment")@Controllerpublic class CommentController {    private static final Logger logger = LoggerFactory.getLogger(CommentController.class);    @Autowired    private CommentService commentService;    /**     * 新增一条评论     * @return     */    @RequestMapping(path = "/add", method = {RequestMethod.POST})    @ResponseBody    public Response addComment(@RequestBody String jsonStr) {        try {            Map<String, String> map = JsonUtil.strToMap(jsonStr);            String tid = map.get("tid");            if (StringUtils.isEmpty(tid)) {                return new Response(1, "tid不能为空");            }            String comment = map.get("comment");            commentService.addComment(Integer.parseInt(tid), comment);            return new Response(0, "新增成功");        } catch (Exception e) {            logger.error("addComment:", e);            return new Response(1, "新增失败");        }    }//    /**  用不上//     * 获取comment(带reply)//     * @param tid//     * @return//     *///    @RequestMapping(path = "/get", method = {RequestMethod.GET})//    @ResponseBody//    public Response getComment(@RequestParam("tid") int tid) {//        try {//            return new Response(0, "查询成功", commentService.getComments(tid));//        } catch (Exception e) {//            logger.error("getComment:", e);//            return new Response(1, "查询失败");//        }//    }    @RequestMapping("/dele")    @ResponseBody    public Response deleComment(@RequestParam("cid") int cid) {        try {            commentService.deleComment(cid);            return new Response(0, "删除成功");        } catch (Exception e) {            logger.error("deleComment:", e);            return new Response(1, "删除失败");        }    }}