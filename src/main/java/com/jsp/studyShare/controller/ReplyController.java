package com.jsp.studyShare.controller;import com.jsp.studyShare.Service.ReplyService;import com.jsp.studyShare.model.Response;import com.jsp.studyShare.utils.JsonUtil;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.util.StringUtils;import org.springframework.web.bind.annotation.*;import java.util.Map;@RequestMapping("/reply")@Controllerpublic class ReplyController {    private static final Logger logger = LoggerFactory.getLogger(ReplyController.class);    @Autowired    private ReplyService replyService;    @RequestMapping(path = "/add", method = {RequestMethod.POST})    @ResponseBody    public Response addReply(@RequestBody String jsonStr) {        try {            Map<String, String> map = JsonUtil.strToMap(jsonStr);            String cid = map.get("cid");            String reply = map.get("reply");            if (StringUtils.isEmpty(cid)) {                return new Response(1, "cid不能为空");            }            replyService.addReply(Integer.parseInt(cid), reply);            return new Response(0, "新增成功");        } catch (Exception e) {            logger.error("addReply:", e);            return new Response(1, "新增失败");        }    }    @RequestMapping(path = "/addU", method = {RequestMethod.POST})    @ResponseBody    public Response addUserReply(@RequestBody String jsonStr) {        try {            Map<String, String> map = JsonUtil.strToMap(jsonStr);            String rid = map.get("rid");            String userReply = map.get("userReply");            if (StringUtils.isEmpty(rid)) {                return new Response(1, "rid不能为空");            }            replyService.addUserReply(Integer.parseInt(rid), userReply);            return new Response(0, "新增成功");        } catch (Exception e) {            logger.error("addUserReply:", e);            return new Response(1, "新增失败");        }    }    @RequestMapping(path = "/dele", method = {RequestMethod.GET})    @ResponseBody    public Response deleReply(@RequestParam("rid") int rid) {        try {            replyService.deleReply(rid);            return new Response(0, "删除成功");        } catch (Exception e) {            logger.error("deleReply:", e);            return new Response(1, "删除失败");        }    }}