package com.jsp.studyShare.utils;import com.jsp.studyShare.controller.DataController;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import java.security.MessageDigest;import java.util.Random;public class studyShareUtil {    private static final Logger logger = LoggerFactory.getLogger(studyShareUtil.class);    public static String[] FILE_EXT = new String[] {"zip"};    //域名    //public static String studyShare_DOMAIN = "http://127.0.0.1:8080/";    public static String studyShare_DOMAIN = "http://132.232.101.33:8082/";    //上传路径    //public static String FILE_DIR = "D:/MyWorkSpace/studyShare/uploadFile/";    public static String FILE_DIR = "/usr/studyShare/uploadFile/";    public static boolean isFileAllow(String fileExt) {        for (String ext : FILE_EXT) {            if (ext.equals(fileExt)) {                return true;            }        }        return false;    }    //md5加密    public static String MD5(String key) {        char hexDigits[] = {                '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'        };        try {            byte[] btInput = key.getBytes();            //获得md5摘要算法的 MessageDigest对象            MessageDigest mdInst = MessageDigest.getInstance("MD5");            //使用指定字节更新摘要            mdInst.update(btInput);            //获得密文            byte[] md = mdInst.digest();            //把密文转换成十六进制的字符串形式            int j = md.length;            char str[] = new char[j * 2];            int k = 0;            for (int i = 0; i < j; i++) {                byte byte0 = md[i];                str[k++] = hexDigits[byte0 >>> 4 & 0xf];                str[k++] = hexDigits[byte0 & 0xf];            }            return new String(str);        } catch (Exception e) {            logger.error("生成md5失败",e);            return  null;        }    }    /**     * 产生四位随机数 0补齐     * @return     */    public static int getFourRandom(){        Random random = new Random();        String fourRandom = random.nextInt(10000) + "";        int randLenght = fourRandom.length();        if (randLenght < 4) {            for (int i = 1; i <= 4-randLenght; i++) {                fourRandom += "0";            }        }        return Integer.parseInt(fourRandom);    }}